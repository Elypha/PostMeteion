<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XivCommon</name>
    </assembly>
    <members>
        <member name="T:XivCommon.Functions.BattleTalk">
            <summary>
            The class containing BattleTalk functionality
            </summary>
        </member>
        <member name="T:XivCommon.Functions.BattleTalk.BattleTalkEventDelegate">
            <summary>
            The delegate for BattleTalk events.
            </summary>
        </member>
        <member name="E:XivCommon.Functions.BattleTalk.OnBattleTalk">
            <summary>
            <para>
            The event that is fired when a BattleTalk window is shown.
            </para>
            <para>
            Requires the <see cref="F:XivCommon.Hooks.BattleTalk"/> hook to be enabled.
            </para>
            </summary>
        </member>
        <member name="M:XivCommon.Functions.BattleTalk.Dispose">
            <inheritdoc />
        </member>
        <member name="M:XivCommon.Functions.BattleTalk.Show(Dalamud.Game.Text.SeStringHandling.SeString,Dalamud.Game.Text.SeStringHandling.SeString,XivCommon.Functions.BattleTalkOptions)">
            <summary>
            Show a BattleTalk window with the given options.
            </summary>
            <param name="sender">The name to attribute to the message</param>
            <param name="message">The message to show in the window</param>
            <param name="options">Optional options for the window</param>
            <exception cref="T:System.ArgumentException">If sender or message are empty</exception>
            <exception cref="T:System.InvalidOperationException">If the signature for this function could not be found</exception>
        </member>
        <member name="T:XivCommon.Functions.BattleTalkOptions">
            <summary>
            Options for displaying a BattleTalk window.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.BattleTalkOptions.Duration">
            <summary>
            Duration to display the window, in seconds.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.BattleTalkOptions.Style">
            <summary>
            The style of the window.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.BattleTalkStyle">
            <summary>
            BattleTalk window styles.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.BattleTalkStyle.Normal">
            <summary>
            A normal battle talk window with a white background.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.BattleTalkStyle.Aetherial">
            <summary>
            A battle talk window with a blue background and styled edges.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.BattleTalkStyle.System">
            <summary>
            A battle talk window styled similarly to a system text message (black background).
            </summary>
        </member>
        <member name="F:XivCommon.Functions.BattleTalkStyle.Blue">
            <summary>
            <para>
            A battle talk window with a blue, computer-y background.
            </para>
            <para>
            Used by the Ultima Weapons (Ruby, Emerald, etc.).
            </para>
            </summary>
        </member>
        <member name="T:XivCommon.Functions.Chat">
            <summary>
            A class containing chat functionality
            </summary>
        </member>
        <member name="M:XivCommon.Functions.Chat.SendMessage(System.String)">
            <summary>
            Send a given message to the chat box. <b>This can send chat to the server.</b>
            </summary>
            <param name="message">Message to send</param>
            <exception cref="T:System.InvalidOperationException">If the signature for this function could not be found</exception>
        </member>
        <member name="T:XivCommon.Functions.ChatBubbles">
            <summary>
            Class containing chat bubble events and functions
            </summary>
        </member>
        <member name="T:XivCommon.Functions.ChatBubbles.OnChatBubbleDelegate">
            <summary>
            The delegate for chat bubble events.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.ChatBubbles.OnUpdateChatBubbleDelegate">
            <summary>
            The delegate for chat bubble update events.
            </summary>
        </member>
        <member name="E:XivCommon.Functions.ChatBubbles.OnChatBubble">
            <summary>
            <para>
            The event that is fired when a chat bubble is shown.
            </para>
            <para>
            Requires the <see cref="F:XivCommon.Hooks.ChatBubbles"/> hook to be enabled.
            </para>
            </summary>
        </member>
        <member name="E:XivCommon.Functions.ChatBubbles.OnUpdateBubble">
            <summary>
            <para>
            The event that is fired when a chat bubble is updated.
            </para>
            <para>
            Requires the <see cref="F:XivCommon.Hooks.ChatBubbles"/> hook to be enabled.
            </para>
            </summary>
        </member>
        <member name="M:XivCommon.Functions.ChatBubbles.Dispose">
            <inheritdoc />
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.BaseContextMenuArgs">
            <summary>
            The base class for context menu arguments
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.BaseContextMenuArgs.Addon">
            <summary>
            Pointer to the context menu addon.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.BaseContextMenuArgs.Agent">
            <summary>
            Pointer to the context menu agent.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.BaseContextMenuArgs.ParentAddonName">
            <summary>
            The name of the addon containing this context menu, if any.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.BaseContextMenuArgs.ObjectId">
            <summary>
            The object ID for this context menu. May be invalid (0xE0000000).
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.BaseContextMenuArgs.ContentIdLower">
            <summary>
            The lower half of the content ID of the object for this context menu. May be zero.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.BaseContextMenuArgs.Text">
            <summary>
            The text related to this context menu, usually an object name.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.BaseContextMenuArgs.ObjectWorld">
            <summary>
            The world of the object this context menu is for, if any.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.BaseContextMenuItem">
            <summary>
            A base context menu item
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.BaseContextMenuItem.Enabled">
            <summary>
            If this item should be enabled in the menu.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.BaseContextMenuItem.IsSubMenu">
            <summary>
            If this item should have the submenu arrow in the menu.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.ContextMenu">
            <summary>
            Context menu functions
            </summary>
        </member>
        <member name="F:XivCommon.Functions.ContextMenu.ContextMenu.ParentAddonIdOffset">
            <summary>
            Offset from addon to menu type
            </summary>
        </member>
        <member name="F:XivCommon.Functions.ContextMenu.ContextMenu.MenuActionsPointerOffset">
            <summary>
            Offset from agent to actions byte array pointer (have to add the actions offset after)
            </summary>
        </member>
        <member name="F:XivCommon.Functions.ContextMenu.ContextMenu.BooleanOffsetCheck">
            <summary>
            SetUpContextSubMenu checks this
            </summary>
        </member>
        <member name="F:XivCommon.Functions.ContextMenu.ContextMenu.MenuActionsOffset">
            <summary>
            Offset from [MenuActionsPointer] to actions byte array
            </summary>
        </member>
        <member name="F:XivCommon.Functions.ContextMenu.ContextMenu.InventoryMenuActionsOffset">
            <summary>
            Offset from inventory context agent to actions byte array
            </summary>
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.ContextMenu.ContextMenuOpenEventDelegate">
            <summary>
            The delegate for context menu events.
            </summary>
        </member>
        <member name="E:XivCommon.Functions.ContextMenu.ContextMenu.OpenContextMenu">
            <summary>
            <para>
            The event that is fired when a context menu is being prepared for opening.
            </para>
            <para>
            Requires the <see cref="F:XivCommon.Hooks.ContextMenu"/> hook to be enabled.
            </para>
            </summary>
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.ContextMenu.InventoryContextMenuOpenEventDelegate">
            <summary>
            The delegate for inventory context menu events.
            </summary>
        </member>
        <member name="E:XivCommon.Functions.ContextMenu.ContextMenu.OpenInventoryContextMenu">
            <summary>
            <para>
            The event that is fired when an inventory context menu is being prepared for opening.
            </para>
            <para>
            Requires the <see cref="F:XivCommon.Hooks.ContextMenu"/> hook to be enabled.
            </para>
            </summary>
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.ContextMenu.ContextMenuItemSelectedDelegate">
            <summary>
            The delegate that is run when a context menu item is selected.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.ContextMenu.InventoryContextMenuItemSelectedDelegate">
            <summary>
            The delegate that is run when an inventory context menu item is selected.
            </summary>
        </member>
        <member name="M:XivCommon.Functions.ContextMenu.ContextMenu.Dispose">
            <inheritdoc />
        </member>
        <member name="M:XivCommon.Functions.ContextMenu.ContextMenu.PopulateItems(System.IntPtr,System.IntPtr,XivCommon.Functions.ContextMenu.ContextMenu.ContextMenuOpenEventDelegate,XivCommon.Functions.ContextMenu.ContextMenu.InventoryContextMenuOpenEventDelegate,System.Collections.Generic.IReadOnlyCollection{XivCommon.Functions.ContextMenu.NativeContextMenuItem})">
            <returns>true on error</returns>
        </member>
        <member name="M:XivCommon.Functions.ContextMenu.ContextMenu.SubMenuInner(System.IntPtr)">
            <returns>false if original should be called</returns>
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.ContextMenuItemSelectedArgs">
            <summary>
            Arguments for the context menu item selected delegate.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.ContextMenuOpenArgs">
            <summary>
            Arguments for the context menu event.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.ContextMenuOpenArgs.Items">
            <summary>
            Context menu items in this menu.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.CustomContextMenuItem`1">
            <summary>
            A custom context menu item
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.CustomContextMenuItem`1.NameEnglish">
            <summary>
            The name of the context item to be shown for English clients.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.CustomContextMenuItem`1.NameJapanese">
            <summary>
            The name of the context item to be shown for Japanese clients.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.CustomContextMenuItem`1.NameFrench">
            <summary>
            The name of the context item to be shown for French clients.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.CustomContextMenuItem`1.NameGerman">
            <summary>
            The name of the context item to be shown for German clients.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.CustomContextMenuItem`1.Action">
            <summary>
            The action to perform when this item is clicked.
            </summary>
        </member>
        <member name="M:XivCommon.Functions.ContextMenu.CustomContextMenuItem`1.#ctor(Dalamud.Game.Text.SeStringHandling.SeString,`0)">
            <summary>
            Create a new context menu item.
            </summary>
            <param name="name">the English name of the item, copied to other languages</param>
            <param name="action">the action to perform on click</param>
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.Inventory.BaseInventoryContextMenuArgs">
            <summary>
            The base class for inventory context menu arguments
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.Inventory.BaseInventoryContextMenuArgs.Addon">
            <summary>
            Pointer to the context menu addon.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.Inventory.BaseInventoryContextMenuArgs.Agent">
            <summary>
            Pointer to the context menu agent.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.Inventory.BaseInventoryContextMenuArgs.ParentAddonName">
            <summary>
            The name of the addon containing this context menu, if any.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.Inventory.BaseInventoryContextMenuArgs.ItemId">
            <summary>
            The ID of the item this context menu is for.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.Inventory.BaseInventoryContextMenuArgs.ItemAmount">
            <summary>
            The amount of the item this context menu is for.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.Inventory.BaseInventoryContextMenuArgs.ItemHq">
            <summary>
            If the item this context menu is for is high-quality.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.Inventory.InventoryContextMenuItem">
            <summary>
            A custom context menu item for inventory items.
            </summary>
        </member>
        <member name="M:XivCommon.Functions.ContextMenu.Inventory.InventoryContextMenuItem.#ctor(Dalamud.Game.Text.SeStringHandling.SeString,XivCommon.Functions.ContextMenu.ContextMenu.InventoryContextMenuItemSelectedDelegate)">
            <summary>
            Create a new context menu item for inventory items.
            </summary>
            <param name="name">the English name of the item, copied to other languages</param>
            <param name="action">the action to perform on click</param>
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.Inventory.InventoryContextMenuItemSelectedArgs">
            <summary>
            The arguments for when an inventory context menu item is selected
            </summary>
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.Inventory.InventoryContextMenuOpenArgs">
            <summary>
            The arguments for when an inventory context menu is opened
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.Inventory.InventoryContextMenuOpenArgs.Items">
            <summary>
            Context menu items in this menu.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.Inventory.InventoryContextSubMenuItem">
            <summary>
            A custom inventory context menu item that will open a submenu
            </summary>
        </member>
        <member name="M:XivCommon.Functions.ContextMenu.Inventory.InventoryContextSubMenuItem.#ctor(Dalamud.Game.Text.SeStringHandling.SeString,XivCommon.Functions.ContextMenu.ContextMenu.InventoryContextMenuOpenEventDelegate)">
            <summary>
            Create a new context menu item for inventory items that will open a submenu.
            </summary>
            <param name="name">the English name of the item, copied to other languages</param>
            <param name="action">the action to perform on click</param>
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.NativeContextMenuItem">
            <summary>
            A native context menu item
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.NativeContextMenuItem.InternalAction">
            <summary>
            The action code to be used in the context menu agent for this item.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.ContextMenu.NativeContextMenuItem.Name">
            <summary>
            The name of the context item.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.NormalContextMenuItem">
            <summary>
            A custom normal context menu item
            </summary>
        </member>
        <member name="M:XivCommon.Functions.ContextMenu.NormalContextMenuItem.#ctor(Dalamud.Game.Text.SeStringHandling.SeString,XivCommon.Functions.ContextMenu.ContextMenu.ContextMenuItemSelectedDelegate)">
            <summary>
            Create a new custom context menu item.
            </summary>
            <param name="name">the English name of the item, copied to other languages</param>
            <param name="action">the action to perform on click</param>
        </member>
        <member name="T:XivCommon.Functions.ContextMenu.NormalContextSubMenuItem">
            <summary>
            A custom context menu item that will open a submenu
            </summary>
        </member>
        <member name="M:XivCommon.Functions.ContextMenu.NormalContextSubMenuItem.#ctor(Dalamud.Game.Text.SeStringHandling.SeString,XivCommon.Functions.ContextMenu.ContextMenu.ContextMenuOpenEventDelegate)">
            <summary>
            Create a new custom context menu item that will open a submenu.
            </summary>
            <param name="name">the English name of the item, copied to other languages</param>
            <param name="action">the action to perform on click</param>
        </member>
        <member name="T:XivCommon.Functions.DutyFinder">
            <summary>
            Duty Finder functions
            </summary>
        </member>
        <member name="M:XivCommon.Functions.DutyFinder.OpenDuty(Lumina.Excel.GeneratedSheets.ContentFinderCondition)">
            <summary>
            Opens the Duty Finder to the given duty.
            </summary>
            <param name="condition">duty to show</param>
            <exception cref="T:System.InvalidOperationException">if the open duty function could not be found in memory</exception>
        </member>
        <member name="M:XivCommon.Functions.DutyFinder.OpenDuty(System.UInt32)">
            <summary>
            Opens the Duty Finder to the given duty ID.
            </summary>
            <param name="contentFinderCondition">ID of duty to show</param>
            <exception cref="T:System.InvalidOperationException">if the open duty function could not be found in memory</exception>
        </member>
        <member name="M:XivCommon.Functions.DutyFinder.OpenRoulette(Lumina.Excel.GeneratedSheets.ContentRoulette)">
            <summary>
            Opens the Duty Finder to the given roulette.
            </summary>
            <param name="roulette">roulette to show</param>
        </member>
        <member name="M:XivCommon.Functions.DutyFinder.OpenRoulette(System.Byte)">
            <summary>
            Opens the Duty Finder to the given roulette ID.
            </summary>
            <param name="roulette">ID of roulette to show</param>
        </member>
        <member name="T:XivCommon.Functions.Examine">
            <summary>
            Class containing examine functions
            </summary>
        </member>
        <member name="M:XivCommon.Functions.Examine.OpenExamineWindow(Dalamud.Game.ClientState.Objects.Types.GameObject)">
            <summary>
            Opens the Examine window for the specified object.
            </summary>
            <param name="object">Object to open window for</param>
            <exception cref="T:System.InvalidOperationException">If the signature for this function could not be found</exception>
        </member>
        <member name="M:XivCommon.Functions.Examine.OpenExamineWindow(System.UInt32)">
            <summary>
            Opens the Examine window for the object with the specified ID.
            </summary>
            <param name="objectId">Object ID to open window for</param>
            <exception cref="T:System.InvalidOperationException">If the signature for this function could not be found</exception>
        </member>
        <member name="T:XivCommon.Functions.FriendList.FriendList">
            <summary>
            The class containing friend list functionality
            </summary>
        </member>
        <member name="P:XivCommon.Functions.FriendList.FriendList.List">
            <summary>
            <para>
            A live list of the currently-logged-in player's friends.
            </para>
            <para>
            The list is empty if not logged in.
            </para>
            </summary>
        </member>
        <member name="T:XivCommon.Functions.FriendList.FriendListEntry">
            <summary>
            An entry in a player's friend list.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.FriendList.FriendListEntry.ContentId">
            <summary>
            The content ID of the friend.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.FriendList.FriendListEntry.HomeWorld">
            <summary>
            The home world of the friend.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.FriendList.FriendListEntry.CurrentWorld">
            <summary>
            The current world of the friend.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.FriendList.FriendListEntry.Job">
            <summary>
            The job the friend is currently on.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.FriendList.FriendListEntry.RawName">
            <summary>
            The friend's raw SeString name. See <see cref="P:XivCommon.Functions.FriendList.FriendListEntry.Name"/>.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.FriendList.FriendListEntry.RawFreeCompany">
            <summary>
            The friend's raw SeString free company tag. See <see cref="P:XivCommon.Functions.FriendList.FriendListEntry.FreeCompany"/>.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.FriendList.FriendListEntry.Name">
            <summary>
            The friend's name.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.FriendList.FriendListEntry.FreeCompany">
            <summary>
            The friend's free company tag.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.Housing.Housing">
            <summary>
            The class containing housing functionality
            </summary>
        </member>
        <member name="P:XivCommon.Functions.Housing.Housing.RawLocation">
             <summary>
             Gets the raw struct containing information about the player's current location in a housing ward.
            
             <returns>struct if player is in a housing ward, null otherwise</returns>
             </summary>
        </member>
        <member name="P:XivCommon.Functions.Housing.Housing.Location">
             <summary>
             Gets process information about the player's current location in a housing ward.
            
             <returns>information class if player is in a housing ward, null otherwise</returns>
             </summary>
        </member>
        <member name="T:XivCommon.Functions.Housing.HousingLocation">
            <summary>
            Information about a player's current location in a housing ward.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.Housing.HousingLocation.Ward">
            <summary>
            The housing ward that the player is in.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.Housing.HousingLocation.Yard">
            <summary>
            <para>
            The yard that the player is in.
            </para>
            <para>
            This is the same as plot number but indicates that the player is in
            the exterior area (the yard) of that plot.
            </para>
            </summary>
        </member>
        <member name="F:XivCommon.Functions.Housing.HousingLocation.Plot">
            <summary>
            The plot that the player is in.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.Housing.HousingLocation.ApartmentWing">
            <summary>
            The apartment wing (1 or 2 for normal or subdivision) that the
            player is in.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.Housing.HousingLocation.Apartment">
            <summary>
            The apartment that the player is in.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.Housing.RawHousingLocation">
            <summary>
            Information about the player's current location in a housing ward as
            kept by the game's internal structures.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.Housing.RawHousingLocation.CurrentPlot">
             <summary>
             The zero-indexed plot number that the player is in.
            
             <para>
             Contains apartment data when inside an apartment building.
             </para>
             </summary>
        </member>
        <member name="F:XivCommon.Functions.Housing.RawHousingLocation.CurrentWard">
             <summary>
             The zero-indexed ward number that the player is in.
            
             <para>
             Contains apartment data when inside an apartment building.
             </para>
             </summary>
        </member>
        <member name="F:XivCommon.Functions.Housing.RawHousingLocation.CurrentYard">
             <summary>
             The zero-indexed yard number that the player is in.
            
             <para>
             Is <c>0xFF</c> when not in a yard.
             </para>
             </summary>
        </member>
        <member name="F:XivCommon.Functions.Housing.RawHousingLocation.InsideIndicator">
            <summary>
            A byte that is zero when the player is inside a plot.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.Journal">
            <summary>
            Journal functions
            </summary>
        </member>
        <member name="M:XivCommon.Functions.Journal.OpenQuest(Lumina.Excel.GeneratedSheets.Quest)">
            <summary>
            Opens the quest journal to the given quest.
            </summary>
            <param name="quest">quest to show</param>
            <exception cref="T:System.InvalidOperationException">if the open quest function could not be found in memory</exception>
        </member>
        <member name="M:XivCommon.Functions.Journal.OpenQuest(System.UInt32)">
            <summary>
            Opens the quest journal to the given quest ID.
            </summary>
            <param name="questId">ID of quest to show</param>
            <exception cref="T:System.InvalidOperationException">if the open quest function could not be found in memory</exception>
        </member>
        <member name="M:XivCommon.Functions.Journal.IsQuestCompleted(Lumina.Excel.GeneratedSheets.Quest)">
            <summary>
            Checks if the given quest is completed.
            </summary>
            <param name="quest">quest to check</param>
            <returns>true if the quest is completed</returns>
            <exception cref="T:System.InvalidOperationException">if the function for checking quest completion could not be found in memory</exception>
        </member>
        <member name="M:XivCommon.Functions.Journal.IsQuestCompleted(System.UInt32)">
            <summary>
            Checks if the given quest ID is completed.
            </summary>
            <param name="questId">ID of quest to check</param>
            <returns>true if the quest is completed</returns>
            <exception cref="T:System.InvalidOperationException">if the function for checking quest completion could not be found in memory</exception>
        </member>
        <member name="T:XivCommon.Functions.NamePlates.NamePlates">
            <summary>
            The class containing name plate functionality
            </summary>
        </member>
        <member name="T:XivCommon.Functions.NamePlates.NamePlates.NamePlateUpdateEvent">
            <summary>
            The delegate for name plate update events.
            </summary>
        </member>
        <member name="E:XivCommon.Functions.NamePlates.NamePlates.OnUpdate">
            <summary>
            <para>
            The event that is fired when a name plate is due to update.
            </para>
            <para>
            Requires the <see cref="F:XivCommon.Hooks.NamePlates"/> hook to be enabled.
            </para>
            </summary>
        </member>
        <member name="P:XivCommon.Functions.NamePlates.NamePlates.ForceRedraw">
            <summary>
            <para>
            If all name plates should be forced to redraw.
            </para>
            <para>
            This is useful for forcing your changes to apply to existing name plates when the plugin is hot-loaded.
            </para>
            </summary>
        </member>
        <member name="M:XivCommon.Functions.NamePlates.NamePlates.Dispose">
            <inheritdoc />
        </member>
        <member name="T:XivCommon.Functions.NamePlates.NamePlateUpdateEventArgs">
            <summary>
            Arguments for the name plate update event
            </summary>
        </member>
        <member name="P:XivCommon.Functions.NamePlates.NamePlateUpdateEventArgs.ObjectId">
            <summary>
            The object ID associated with this name plate.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.NamePlates.NamePlateUpdateEventArgs.Name">
            <summary>
            The name string.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.NamePlates.NamePlateUpdateEventArgs.FreeCompany">
            <summary>
            The FC tag string for name plates that use it. Set to the empty string to disable.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.NamePlates.NamePlateUpdateEventArgs.Title">
            <summary>
            The title string for name plates that use it. Set to the empty string to disable.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.NamePlates.NamePlateUpdateEventArgs.Level">
             <summary>
             The level string for name plates that use it. Set to the empty string to disable.
             </summary>
            
        </member>
        <member name="P:XivCommon.Functions.NamePlates.NamePlateUpdateEventArgs.EnemyLetter">
            <summary>
            <para>
            The letter that appears after enemy names, such as A, B, etc.
            </para>
            <para>
            <b>Setting this property will always cause a memory leak.</b>
            </para>
            </summary>
        </member>
        <member name="P:XivCommon.Functions.NamePlates.NamePlateUpdateEventArgs.Icon">
            <summary>
            The icon to be shown on this name plate. Use <see cref="F:System.UInt32.MaxValue"/> for no icon.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.NamePlates.NamePlateUpdateEventArgs.Colour">
            <summary>
            The colour of this name plate.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.NamePlates.NamePlateUpdateEventArgs.Type">
            <summary>
            <para>
            The type of this name plate.
            </para>
            <para>
            Changing this without setting the appropriate fields can cause the game to crash.
            </para>
            </summary>
        </member>
        <member name="P:XivCommon.Functions.NamePlates.NamePlateUpdateEventArgs.Flags">
            <summary>
            A bitmask of flags for the name plate.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.NamePlates.PlateType">
            <summary>
            The various different name plate types
            </summary>
        </member>
        <member name="F:XivCommon.Functions.NamePlates.PlateType.Player">
            <summary>
            A normal player name plate
            </summary>
        </member>
        <member name="F:XivCommon.Functions.NamePlates.PlateType.NoIconOrFc">
            <summary>
            A name plate with the icon and FC tag removed
            </summary>
        </member>
        <member name="F:XivCommon.Functions.NamePlates.PlateType.LevelNoFc">
            <summary>
            A name plate with a level string visible, title always below the name, and FC tag removed
            </summary>
        </member>
        <member name="F:XivCommon.Functions.NamePlates.PlateType.NameOnly">
            <summary>
            A name plate with only the name visible
            </summary>
        </member>
        <member name="F:XivCommon.Functions.NamePlates.PlateType.LevelAndName">
            <summary>
            A name plate with only the level string and name visible
            </summary>
        </member>
        <member name="F:XivCommon.Functions.NamePlates.PlateType.LowTitleNoFc">
            <summary>
            A name plate where the title always appears below the name and the FC tag is removed
            </summary>
        </member>
        <member name="T:XivCommon.Functions.NamePlates.RgbaColour">
            <summary>
            A colour, represented in the RGBA format.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.NamePlates.RgbaColour.R">
            <summary>
            The red component of the colour.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.NamePlates.RgbaColour.G">
            <summary>
            The green component of the colour.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.NamePlates.RgbaColour.B">
            <summary>
            The blue component of the colour.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.NamePlates.RgbaColour.A">
            <summary>
            The alpha component of the colour.
            </summary>
        </member>
        <member name="M:XivCommon.Functions.NamePlates.RgbaColour.op_Implicit(System.UInt32)~XivCommon.Functions.NamePlates.RgbaColour">
            <summary>
            Converts an unsigned integer into an RgbaColour.
            </summary>
            <param name="rgba">32-bit integer representing an RGBA colour</param>
            <returns>an RgbaColour equivalent to the integer representation</returns>
        </member>
        <member name="M:XivCommon.Functions.NamePlates.RgbaColour.op_Implicit(XivCommon.Functions.NamePlates.RgbaColour)~System.UInt32">
            <summary>
            Converts an RgbaColour into an unsigned integer representation.
            </summary>
            <param name="rgba">an RgbaColour to convert</param>
            <returns>32-bit integer representing an RGBA colour</returns>
        </member>
        <member name="M:XivCommon.Functions.NamePlates.RgbaColour.op_Implicit(FFXIVClientStructs.FFXIV.Client.Graphics.ByteColor)~XivCommon.Functions.NamePlates.RgbaColour">
            <summary>
            Converts a ByteColor into an RgbaColour.
            </summary>
            <param name="rgba">ByteColor</param>
            <returns>equivalent RgbaColour</returns>
        </member>
        <member name="M:XivCommon.Functions.NamePlates.RgbaColour.op_Implicit(XivCommon.Functions.NamePlates.RgbaColour)~FFXIVClientStructs.FFXIV.Client.Graphics.ByteColor">
            <summary>
            Converts an RgbaColour into a ByteColor.
            </summary>
            <param name="rgba">RgbaColour</param>
            <returns>equivalent ByteColour</returns>
        </member>
        <member name="T:XivCommon.Functions.PartyFinder">
            <summary>
            A class containing Party Finder functionality
            </summary>
        </member>
        <member name="T:XivCommon.Functions.PartyFinder.JoinPfEventDelegate">
            <summary>
            The delegate for party join events.
            </summary>
        </member>
        <member name="E:XivCommon.Functions.PartyFinder.JoinParty">
            <summary>
            <para>
            The event that is fired when the player joins a <b>cross-world</b> party via Party Finder.
            </para>
            <para>
            Requires the <see cref="F:XivCommon.Hooks.PartyFinderJoins"/> hook to be enabled.
            </para>
            </summary>
        </member>
        <member name="P:XivCommon.Functions.PartyFinder.CurrentListings">
            <summary>
            <para>
            The current Party Finder listings that have been displayed.
            </para>
            <para>
            This dictionary is cleared and updated each time the Party Finder is requested, and it only contains the category selected in the Party Finder addon.
            </para>
            <para>
            Keys are the listing ID for fast lookup by ID. Values are the listing itself.
            </para>
            </summary>
        </member>
        <member name="M:XivCommon.Functions.PartyFinder.Dispose">
            <inheritdoc />
        </member>
        <member name="M:XivCommon.Functions.PartyFinder.RefreshListings">
            <summary>
            <para>
            Refresh the Party Finder listings. This does not open the Party Finder.
            </para>
            <para>
            This maintains the currently selected category.
            </para>
            </summary>
            <exception cref="T:System.InvalidOperationException">If the <see cref="F:XivCommon.Hooks.PartyFinderListings"/> hook is not enabled or if the signature for this function could not be found</exception>
        </member>
        <member name="F:XivCommon.Functions.JoinType.Normal">
            <summary>
            Join via invite or party conversion.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.JoinType.PartyFinder">
            <summary>
            Join via Party Finder.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.JoinType.LeaveDuty">
            <summary>
            Remain in cross-world party after leaving a duty.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.Talk">
            <summary>
            Class containing Talk events
            </summary>
        </member>
        <member name="T:XivCommon.Functions.Talk.TalkEventDelegate">
            <summary>
            The delegate for Talk events.
            </summary>
        </member>
        <member name="E:XivCommon.Functions.Talk.OnTalk">
            <summary>
            <para>
            The event that is fired when NPCs talk.
            </para>
            <para>
            Requires the <see cref="F:XivCommon.Hooks.Talk"/> hook to be enabled.
            </para>
            </summary>
        </member>
        <member name="M:XivCommon.Functions.Talk.Dispose">
            <inheritdoc />
        </member>
        <member name="T:XivCommon.Functions.TalkStyle">
            <summary>
            Talk window styles.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.TalkStyle.Normal">
            <summary>
            The normal style with a white background.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.TalkStyle.Lights">
            <summary>
            A style with lights on the top and bottom border.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.TalkStyle.Shout">
            <summary>
            A style used for when characters are shouting.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.TalkStyle.FlatShout">
            <summary>
            Like <see cref="F:XivCommon.Functions.TalkStyle.Shout"/> but with flatter edges.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.TalkStyle.Dragon">
            <summary>
            The style used when dragons (and some other NPCs) talk.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.TalkStyle.Allagan">
            <summary>
            The style used for Allagan machinery.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.TalkStyle.System">
            <summary>
            The style used for system messages.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.TalkStyle.DragonSystem">
            <summary>
            A mixture of the system message style and the dragon style.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.TalkStyle.PurpleSystem">
            <summary>
            The system message style with a purple background.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.Tooltips.ActionTooltip">
            <summary>
            The class allowing for action tooltip manipulation
            </summary>
        </member>
        <member name="P:XivCommon.Functions.Tooltips.ActionTooltip.Item(XivCommon.Functions.Tooltips.ActionTooltipString)">
            <summary>
            Gets or sets the SeString for the given string enum.
            </summary>
            <param name="ats">the string to retrieve/update</param>
        </member>
        <member name="P:XivCommon.Functions.Tooltips.ActionTooltip.Fields">
            <summary>
            Gets or sets which fields are visible on the tooltip.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.Tooltips.ActionTooltipString">
            <summary>
            An enum containing the strings used in action tooltips.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.Tooltips.ActionTooltipFields">
            <summary>
            An enum containing the fields that can be displayed in action tooltips.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.Tooltips.BaseTooltip">
            <summary>
            The base class for tooltips
            </summary>
        </member>
        <member name="F:XivCommon.Functions.Tooltips.BaseTooltip._stringArrayData">
            <summary>
            A pointer to the StringArrayData class for this tooltip.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.Tooltips.BaseTooltip.NumberArrayData">
            <summary>
            A pointer to the NumberArrayData class for this tooltip.
            </summary>
        </member>
        <member name="P:XivCommon.Functions.Tooltips.BaseTooltip.Item(System.Int32)">
            <summary>
            <para>
            Gets the SeString at the given index for this tooltip.
            </para>
            <para>
            Implementors should provide an enum accessor for this.
            </para>
            </summary>
            <param name="index">string index to retrieve</param>
        </member>
        <member name="T:XivCommon.Functions.Tooltips.ItemTooltip">
            <summary>
            The class allowing for item tooltip manipulation
            </summary>
        </member>
        <member name="P:XivCommon.Functions.Tooltips.ItemTooltip.Item(XivCommon.Functions.Tooltips.ItemTooltipString)">
            <summary>
            Gets or sets the SeString for the given string enum.
            </summary>
            <param name="its">the string to retrieve/update</param>
        </member>
        <member name="P:XivCommon.Functions.Tooltips.ItemTooltip.Fields">
            <summary>
            Gets or sets which fields are visible on the tooltip.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.Tooltips.ItemTooltipString">
            <summary>
            An enum containing the strings used in item tooltips.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.Tooltips.ItemTooltipFields">
            <summary>
            An enum containing the fields that can be displayed in item tooltips.
            </summary>
        </member>
        <member name="F:XivCommon.Functions.Tooltips.ItemTooltipFields.Levels">
            <summary>
            <para>
            Shows item level and equip level.
            </para>
            <para>
            Item level is always visible, but if equip level is set to an empty string, it will be hidden.
            </para>
            </summary>
        </member>
        <member name="T:XivCommon.Functions.Tooltips.Tooltips">
            <summary>
            The class containing tooltip functionality
            </summary>
        </member>
        <member name="T:XivCommon.Functions.Tooltips.Tooltips.ItemTooltipEventDelegate">
            <summary>
            The delegate for item tooltip events.
            </summary>
        </member>
        <member name="T:XivCommon.Functions.Tooltips.Tooltips.ActionTooltipEventDelegate">
            <summary>
            The tooltip for action tooltip events.
            </summary>
        </member>
        <member name="E:XivCommon.Functions.Tooltips.Tooltips.OnItemTooltip">
            <summary>
            <para>
            The event that is fired when an item tooltip is being generated for display.
            </para>
            <para>
            Requires the <see cref="F:XivCommon.Hooks.Tooltips"/> hook to be enabled.
            </para>
            </summary>
        </member>
        <member name="E:XivCommon.Functions.Tooltips.Tooltips.OnActionTooltip">
            <summary>
            <para>
            The event that is fired when an action tooltip is being generated for display.
            </para>
            <para>
            Requires the <see cref="F:XivCommon.Hooks.Tooltips"/> hook to be enabled.
            </para>
            </summary>
        </member>
        <member name="M:XivCommon.Functions.Tooltips.Tooltips.Dispose">
            <inheritdoc />
        </member>
        <member name="T:XivCommon.GameFunctions">
            <summary>
            A class containing game functions
            </summary>
        </member>
        <member name="P:XivCommon.GameFunctions.Chat">
            <summary>
            Chat functions
            </summary>
        </member>
        <member name="P:XivCommon.GameFunctions.PartyFinder">
            <summary>
            Party Finder functions and events
            </summary>
        </member>
        <member name="P:XivCommon.GameFunctions.BattleTalk">
            <summary>
            BattleTalk functions and events
            </summary>
        </member>
        <member name="P:XivCommon.GameFunctions.Examine">
            <summary>
            Examine functions
            </summary>
        </member>
        <member name="P:XivCommon.GameFunctions.Talk">
            <summary>
            Talk events
            </summary>
        </member>
        <member name="P:XivCommon.GameFunctions.ChatBubbles">
            <summary>
            Chat bubble functions and events
            </summary>
        </member>
        <member name="P:XivCommon.GameFunctions.ContextMenu">
            <summary>
            Context menu functions
            </summary>
        </member>
        <member name="P:XivCommon.GameFunctions.Tooltips">
            <summary>
            Tooltip events
            </summary>
        </member>
        <member name="P:XivCommon.GameFunctions.NamePlates">
            <summary>
            Name plate tools and events
            </summary>
        </member>
        <member name="P:XivCommon.GameFunctions.DutyFinder">
            <summary>
            Duty Finder functions
            </summary>
        </member>
        <member name="P:XivCommon.GameFunctions.FriendList">
            <summary>
            Friend list functions
            </summary>
        </member>
        <member name="P:XivCommon.GameFunctions.Journal">
            <summary>
            Journal functions
            </summary>
        </member>
        <member name="P:XivCommon.GameFunctions.Housing">
            <summary>
            Housing functions
            </summary>
        </member>
        <member name="M:XivCommon.GameFunctions.Dispose">
            <inheritdoc />
        </member>
        <member name="M:XivCommon.GameFunctions.GetFramework">
            <summary>
            Convenience method to get a pointer to <see cref="P:XivCommon.GameFunctions.Framework"/>.
            </summary>
            <returns>pointer to struct</returns>
        </member>
        <member name="M:XivCommon.GameFunctions.GetUiModule">
            <summary>
            Gets the pointer to the UI module
            </summary>
            <returns>Pointer</returns>
        </member>
        <member name="M:XivCommon.GameFunctions.GetAtkModule">
            <summary>
            Gets the pointer to the RaptureAtkModule
            </summary>
            <returns>Pointer</returns>
        </member>
        <member name="M:XivCommon.GameFunctions.GetAgentModule">
            <summary>
            Gets the pointer to the agent module
            </summary>
            <returns>Pointer</returns>
        </member>
        <member name="M:XivCommon.GameFunctions.GetAgentByInternalId(System.UInt32)">
            <summary>
            Gets the pointer to an agent from its internal ID.
            </summary>
            <param name="id">internal id of agent</param>
            <returns>Pointer</returns>
            <exception cref="T:System.InvalidOperationException">if the signature for the function could not be found</exception>
        </member>
        <member name="M:XivCommon.GameFunctions.GetAtkStageSingleton">
            <summary>
            Gets the pointer to the AtkStage singleton
            </summary>
            <returns>Pointer</returns>
            <exception cref="T:System.InvalidOperationException">if the signature for the function could not be found</exception>
        </member>
        <member name="T:XivCommon.Hooks">
            <summary>
            Flags for which hooks to use
            </summary>
        </member>
        <member name="F:XivCommon.Hooks.None">
             <summary>
             No hook.
            
             This flag is used to disable all hooking.
             </summary>
        </member>
        <member name="F:XivCommon.Hooks.Tooltips">
             <summary>
             The Tooltips hooks.
            
             This hook is used in order to enable the tooltip events.
             </summary>
        </member>
        <member name="F:XivCommon.Hooks.BattleTalk">
             <summary>
             The BattleTalk hook.
            
             This hook is used in order to enable the BattleTalk events.
             </summary>
        </member>
        <member name="F:XivCommon.Hooks.PartyFinderListings">
            <summary>
            Hooks used for refreshing Party Finder listings.
            </summary>
        </member>
        <member name="F:XivCommon.Hooks.PartyFinderJoins">
            <summary>
            Hooks used for Party Finder join events.
            </summary>
        </member>
        <member name="F:XivCommon.Hooks.PartyFinder">
             <summary>
             All Party Finder hooks.
            
             This hook is used in order to enable all Party Finder functions.
             </summary>
        </member>
        <member name="F:XivCommon.Hooks.Talk">
             <summary>
             The Talk hooks.
            
             This hook is used in order to enable the Talk events.
             </summary>
        </member>
        <member name="F:XivCommon.Hooks.ChatBubbles">
             <summary>
             The chat bubbles hooks.
            
             This hook is used in order to enable the chat bubbles events.
             </summary>
        </member>
        <member name="F:XivCommon.Hooks.ContextMenu">
             <summary>
             The context menu hooks.
            
             This hook is used in order to enable context menu functions.
             </summary>
        </member>
        <member name="F:XivCommon.Hooks.NamePlates">
             <summary>
             The name plate hooks.
            
             This hook is used in order to enable name plate functions.
             </summary>
        </member>
        <member name="M:XivCommon.SigScannerExt.TryScanText(Dalamud.Game.SigScanner,System.String,System.IntPtr@,System.String)">
            <summary>
            Scan for a signature in memory.
            </summary>
            <param name="scanner">SigScanner to use for scanning</param>
            <param name="sig">signature to search for</param>
            <param name="result">pointer where signature was found or <see cref="F:System.IntPtr.Zero"/> if not found</param>
            <param name="name">name of this signature - if specified, a warning will be printed if the signature could not be found</param>
            <returns>true if signature was found</returns>
        </member>
        <member name="T:XivCommon.XivCommonBase">
            <summary>
            A base class for accessing XivCommon functionality.
            </summary>
        </member>
        <member name="P:XivCommon.XivCommonBase.Functions">
            <summary>
            Game functions and events
            </summary>
        </member>
        <member name="M:XivCommon.XivCommonBase.#ctor(XivCommon.Hooks)">
            <summary>
            <para>
            Construct a new XivCommon base.
            </para>
            <para>
            This will automatically enable hooks based on the hooks parameter.
            </para>
            </summary>
            <param name="hooks">Flags indicating which hooks to enable</param>
        </member>
        <member name="M:XivCommon.XivCommonBase.Dispose">
            <inheritdoc />
        </member>
    </members>
</doc>
